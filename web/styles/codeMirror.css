.react-codemirror2 {
	flex: initial !important;
	height: 100%;
	justify-content: flex-start !important;
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
	background: var(--code-background) !important;
	color: var(--primary-text) !important;
}

.cm-s-material div.CodeMirror-selected {
	background: rgba(78, 205, 255, 0.4) !important;
}

.cm-s-material.CodeMirror-focused div.CodeMirror-selected {
	background: rgba(78, 205, 255, 0.4) !important;
}

.cm-s-material .CodeMirror-line::selection,
.cm-s-material .CodeMirror-line > span::selection,
.cm-s-material .CodeMirror-line > span > span::selection {
	background: rgba(78, 205, 255, 0.4) !important;
}

.cm-s-material .CodeMirror-line::-moz-selection,
.cm-s-material .CodeMirror-line > span::-moz-selection,
.cm-s-material .CodeMirror-line > span > span::-moz-selection {
	background: rgba(78, 205, 255, 0.4) !important;
}

.CodeMirror-lines > div > div:not(.CodeMirror-measure) {
	z-index: 10 !important;
}

.cm-s-material .CodeMirror-cursor {
	border-color: var(--primary-text) !important;
}

.CodeMirror-scroll {
	background-color: var(--sidebar-background) !important;
}

.CodeMirror-line::selection {
	background-color: red;
}

.react-codemirror2 {
	height: 100%;
	justify-content: flex-start !important;
}

.CodeMirror-scroll {
	background-color: var(--sidebar-background) !important;
}

.CodeMirror-line::selection {
	background-color: red;
}

.cm-s-material .cm-string {
	color: var(--token-string) !important;
}

.cm-s-material .cm-property,
div.CodeMirror span.CodeMirror-matchingbracket,
.cm-s-material .CodeMirror-matchingbracket {
	color: var(--primary-text) !important;
}
.cm-s-material .cm-atom {
	color: var(--code-value-bool) !important;
}

.cm-s-material .cm-number {
	color: var(--token-number) !important;
}