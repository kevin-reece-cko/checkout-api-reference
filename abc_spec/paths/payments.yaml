post:
  security:
    - ApiSecretKey: []
  tags:
    - Payments
  summary: Request a payment or payout
  operationId: requestAPaymentOrPayout
  description: |
    To accept payments from <a href="https://www.checkout.com/docs/previous/payments/payment-methods/cards" target="blank">cards</a>, <a href="https://www.checkout.com/docs/previous/payments/payment-methods/wallets" target="blank">digital wallets</a> and many <a href="https://www.checkout.com/docs/previous/payments/payment-methods" target="blank">alternative payment methods</a>, specify the `source.type` field, along with the source-specific data.

    To <a href="https://www.checkout.com/docs/previous/card-payouts" target="blank">pay out to a card</a>, specify the destination of your payout using the `destination.type` field, along with the destination-specific data.

    To verify the success of the payment, check the `approved` field in the response.
  parameters:
    - $ref: '#/components/parameters/ckoIdempotencyKey'
  requestBody:
    content:
      application/json:
        schema:
          oneOf:
            - $ref: '#/components/schemas/PaymentRequest'
            - $ref: '#/components/schemas/Payout'
        example:
          source:
            type: token
            token: tok_4gzeau5o2uqubbk6fufs3m7p54
          amount: 6540
          currency: USD
          payment_type: Recurring
          reference: 'ORD-5023-4E89'
          description: 'Set of 3 masks'
          capture: true
          capture_on: '2019-09-10T10:11:12Z'
          customer:
            id: 'cus_udst2tfldj6upmye2reztkmm4i'
            email: 'brucewayne@gmail.com'
            name: 'Bruce Wayne'
          billing_descriptor:
            name: SUPERHEROES.COM
            city: GOTHAM
          shipping:
            address:
              address_line1: Checkout.com
              address_line2: 90 Tottenham Court Road
              city: London
              state: London
              zip: W1T 4TJ
              country: GB
            phone:
              country_code: '+1'
              number: 415 555 2671
          3ds:
            enabled: true
            attempt_n3d: true
            eci: '05'
            cryptogram: AgAAAAAAAIR8CQrXcIhbQAAAAAA=
            xid: MDAwMDAwMDAwMDAwMDAwMzIyNzY=
            version: '2.0.1'
          previous_payment_id: 'pay_fun26akvvjjerahhctaq2uzhu4'
          risk:
            enabled: false
          success_url: 'http://example.com/payments/success'
          failure_url: 'http://example.com/payments/fail'
          payment_ip: '90.197.169.245'
          recipient:
            dob: '1985-05-15'
            account_number: '5555554444'
            zip: W1T
            first_name: John
            last_name: Jones
          metadata:
            udf1: 'value1'
            new_customer: false
            registration_date: '2019-09-10T10:11:12Z'

  responses:
    '201':
      description: Payment processed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentResponse'
          example:
            id: 'pay_mbabizu24mvu3mela5njyhpit4'
            action_id: 'act_mbabizu24mvu3mela5njyhpit4'
            amount: 6540
            currency: 'USD'
            approved: true
            status: 'Authorized'
            auth_code: '770687'
            response_code: '10000'
            response_summary: 'Approved'
            3ds:
              downgraded: true
              enrolled: 'N'
            risk:
              flagged: true
            source:
              type: 'card'
              id: 'src_nwd3m4in3hkuddfpjsaevunhdy'
              billing_address:
                address_line1: 'Checkout.com'
                address_line2: '90 Tottenham Court Road'
                city: 'London'
                state: 'London'
                zip: 'W1T 4TJ'
                country: 'GB'
              phone:
                country_code: '+1'
                number: '415 555 2671'
              last4: '4242'
              fingerprint: 'F31828E2BDABAE63EB694903825CDD36041CC6ED461440B81415895855502832'
              bin: '424242'
            customer:
              id: 'cus_udst2tfldj6upmye2reztkmm4i'
              email: 'brucewayne@gmail.com'
              name: 'Bruce Wayne'
            processed_on: '2019-09-10T10:11:12Z'
            reference: 'ORD-5023-4E89'
            processing:
              retrieval_reference_number: '909913440644'
              acquirer_transaction_id: '440644309099499894406'
              recommendation_code: '02'
            eci: '06'
            scheme_id: '489341065491658'
            _links:
              self:
                href: 'https://api.sandbox.checkout.com/payments/pay_mbabizu24mvu3mela5njyhpit4'
              action:
                href: 'https://api.sandbox.checkout.com/payments/pay_mbabizu24mvu3mela5njyhpit4/actions'
              void:
                href: 'https://api.sandbox.checkout.com/payments/pay_mbabizu24mvu3mela5njyhpit4/voids'
              capture:
                href: 'https://api.sandbox.checkout.com/payments/pay_mbabizu24mvu3mela5njyhpit4/captures'
      headers:
        Cko-Request-Id:
          $ref: '#/components/headers/Cko-Request-Id'
        Cko-Version:
          $ref: '#/components/headers/Cko-Version'
    '202':
      description: Payment asynchronous or further action required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentAcceptedResponse'
      headers:
        Cko-Request-Id:
          $ref: '#/components/headers/Cko-Request-Id'
        Cko-Version:
          $ref: '#/components/headers/Cko-Version'
    '401':
      description: Unauthorized
    '429':
      description: Too many requests or duplicate request detected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    '422':
      description: Invalid data was sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    '502':
      description: Bad gateway
get:
  security:
    - ApiSecretKey: [ ]
  tags:
    - Payments
  summary: Get payment lists
  operationId: getPayments
  description: |
    <span style="font-size: 14px; font-weight: 500; color: rgb(60, 4, 133); background-color: rgb(237, 222, 255); border-radius: 4px; padding: 2px 6px" >Beta</span><p></p>
    Returns a list of your business' payments that match the specified reference. Results are returned in reverse chronological order, with the most recent payments shown first.
    You can use the optional parameters below to skip or limit results.
  parameters:
    - in: query
      name: limit
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
      required: false
      description: The numbers of results to retrieve
    - in: query
      name: skip
      schema:
        type: integer
        minimum: 0
        default: 0
      required: false
      description: The number of results to skip
    - in: query
      name: reference
      schema:
        type: string
      required: true
      description: A reference, such as an order ID, that can be used to identify the payment
  responses:
    '200':
      description: Payments retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentPaged'
    '401':
      description: Unauthorized
    '422':
      description: Unprocessable paging
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagingError'
