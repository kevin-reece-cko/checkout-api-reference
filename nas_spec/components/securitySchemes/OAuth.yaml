type: oauth2
description: |
  Your OAuth credentials consist of an access key ID and an access key secret (corresponding to OAuth 2.0 client ID and client secret). You can exchange these for an access token by calling the [request an access token](#tag/Access/paths/~1connect~1token/post) endpoint.
  You will need to authenticate using basic authentication, using your access key ID and access key secret as your username and password:

  ```
  curl --location --request POST 'https://access.checkout.com/connect/token' \
  --header 'Content-Type: application/x-www-form-urlencoded' \
  --header 'Authorization: Basic dGVzdC1hY2Nlc3Mta2V5LWlkOnRlc3QtYWNjZXNzLWtleS1zZWNyZXQ=' \
  --data-urlencode 'grant_type=client_credentials' \
  --data-urlencode 'scope=gateway'
  ```

  The token server will return a Bearer `access_token` in JSON Web Token (JWT) format which you should use in the `Authorization`
  header of your API requests:

  ```
  curl --location --request POST 'https://api.checkout.com/payments' \
  --header 'Content-Type: application/json' \
  --header 'Accept: application/json' \
  --header 'Authorization: Bearer {{AccessToken}}' \
  --data-raw '{
    "amount": 10000,
    "currency": "USD",
    "reference": "Visa-USD-Test",
    ...
  }'
  ```

  Your access token will be valid for a length of time (in seconds) indicated by the `expires_in` field in the response. When it expires, you'll need to request a new one.

  Depending on the Environment against which you're making your requests against you'll need to request the token from a different Authorization Server.

  | Environment   |      Authorization Server                            |
  |---------------|------------------------------------------------------|
  | Sandbox       |  https://access.sandbox.checkout.com/connect/token   |
  | Production    |  https://access.checkout.com/connect/token           |

flows:
  clientCredentials:
    tokenUrl: string
    scopes:
      vault: Access to all Vault resources
      'vault:instruments': Create instruments
      'vault:tokenization': Tokenize payment instruments
      gateway: Access to all Gateway resources
      'gateway:payment': Request payments
      'gateway:payment-details': Get payment details
      'gateway:payment-authorizations': Increment authorizations
      'gateway:payment-voids': Void payments
      'gateway:payment-captures': Capture payments
      'gateway:payment-refunds': Refund payments
      'fx': Foreign exchange services
      'payouts:bank-details': Get bank details
      'sessions:app': App-based authentication
      'sessions:browser': Browser-based authentication
      disputes: Access to all Disputes resources
      'disputes:view': View disputes
      'disputes:provide-evidence': Provide dispute evidence
      'disputes:accept': Accept disputes
      accounts: Manage sub-entities
      flow: Access to all Flow resources
      'flow:workflows': Manage workflows
      'flow:events': Retrieve events
      files: Access to all Files resources
      'files:retrieve': Retrieve files
      'files:upload': Upload files
      'files:download': Download files
      balances: Access to all Balances resources
      'balances:view': View balances
      transfers: Access to all Transfers resources
      'transfers:view': View transfers
      'transfers:create': Create transfers
      middleware: Access to all Middleware resources
      'middleware:merchants-secret': Allows merchant identity and Middleware token exchange from a secure execution environment
      'middleware:merchants-public': Allows merchant identity and Middleware token exchange from an insecure execution environment
      reports: Access to all Reports resources
      'reports:view': View reports
      financial-actions: Access to all Financial actions resources
      'financial-actions:view': View financial actions
